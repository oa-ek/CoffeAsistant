@model CafeAssistiant.Models.Product

@{
    ViewData["Title"] = "Edit Product";
}

<h2>Edit Product</h2>

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CategoryId" class="control-label"></label>
        <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.Categories"></select>
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Price" class="control-label"></label>
        <input asp-for="Price" class="form-control" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="imageFile" class="control-label">Change Product Image (Optional)</label>
        <input type="file" name="imageFile" class="form-control" />
        @if (!string.IsNullOrEmpty(Model.ImagePath))
        {
            <div>
                <img src="@Model.ImagePath" alt="Product Image" class="img-thumbnail" style="max-width: 200px;" />
            </div>
        }
        <span asp-validation-for="ImagePath" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Quantity" class="control-label"></label>
        <div class="quantity-wrapper">
            <input asp-for="Quantity" class="form-control quantity-input" />
            <span class="unit-label" id="unitLabel">@Model.Unit</span>
        </div>
        <span asp-validation-for="Quantity" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Unit" class="control-label">Одиниця виміру</label>
        <select asp-for="Unit" class="form-control" id="unitSelect">
            <option value="мл" selected="@((Model.Unit == "мл").ToString().ToLower())">мл</option>
            <option value="г" selected="@((Model.Unit == "г").ToString().ToLower())">г</option>
        </select>
        <span asp-validation-for="Unit" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</form>

<style>
    .quantity-wrapper {
        display: flex;
        align-items: center;
    }

    .quantity-input {
        flex: 1;
        margin-right: 8px;
    }

    .unit-label {
        padding: 8px 12px;
        background-color: #f1f1f1;
        border: 1px solid #ccc;
        border-radius: 4px;
        min-width: 40px;
        text-align: center;
    }
</style>

@section Scripts {
    <script>
        const unitSelect = document.getElementById('unitSelect');
        const unitLabel = document.getElementById('unitLabel');

        unitSelect.addEventListener('change', function () {
            unitLabel.textContent = this.value;
        });

        // Встановити поточне значення при завантаженні сторінки
        unitLabel.textContent = unitSelect.value;
    </script>
}
